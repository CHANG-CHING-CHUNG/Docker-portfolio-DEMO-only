# tell docker what version of the docker-compose.yml we're using
version: "2.3"

# define the network
networks:
  web-network:

# start the services section
services:
 
  # define the name of our service
  # corresponds to the "--name" parameter
  docker-php-cli:
    # define the directory where the build should happened,
    # i.e. where the Dockerfile of the service is located
    # all paths are relative to the location of docker-compose.yml
    build:
      context: ./php-cli
    # reserve a tty - otherwise the container shuts down immediately
    # corresponds to the "-i" flag
    tty: true
    # mount the app directory of the host to /var/www in the container
    # corresponds to the "-v" option
    volumes:
      - ./app:/var/www
    # connect to the network
    # corresponds to the "--network" option
    networks:
      - web-network
  

  docker-nginx:
    build:
      context: ./nginx
    # defines the port mapping
    # corresponds to the "-p" flag
    depends_on:
      - docker-mysql
      - docker-node
    ports:
      - "80:8080"
    tty: true
    volumes:
      - ./app:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - web-network

  docker-php-fpm:
    build:
      context: ./php-fpm
    tty: true
    volumes:
      - ./app:/var/www
    networks:
      - web-network

  docker-mysql:
    build:
      context: ./mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 
      MYSQL_ROOT_HOST: 0.0.0.0
      MYSQL_USER: test
      MYSQL_PASSWORD: 
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql
    networks:
      - web-network

  docker-node:
    build:
      context: ./node
    command: /var/wait-for-it.sh docker-mysql:3306 -t 0 -- npm start
    depends_on:
      - docker-mysql
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    volumes:
      - ./node/node-Lottery:/var/node/node-Lottery
      - ./node/wait-for-it.sh:/var/wait-for-it.sh
    networks:
      - web-network

volumes:
  db-data:
